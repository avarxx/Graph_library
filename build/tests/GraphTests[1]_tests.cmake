add_test([=[AdjacencyListGraphTest.AddVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyListGraphTest.AddVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyListGraphTest.AddVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyListGraphTest.RemoveVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyListGraphTest.RemoveVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyListGraphTest.RemoveVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyListGraphTest.AddEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyListGraphTest.AddEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyListGraphTest.AddEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyListGraphTest.RemoveEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyListGraphTest.RemoveEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyListGraphTest.RemoveEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyListGraphTest.GetNeighborsIterator]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyListGraphTest.GetNeighborsIterator]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyListGraphTest.GetNeighborsIterator]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyListGraphTest.HasVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyListGraphTest.HasVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyListGraphTest.HasVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyListGraphTest.HasEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyListGraphTest.HasEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyListGraphTest.HasEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyListGraphTest.RemoveNonexistentVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyListGraphTest.RemoveNonexistentVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyListGraphTest.RemoveNonexistentVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyListGraphTest.RemoveNonexistentEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyListGraphTest.RemoveNonexistentEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyListGraphTest.RemoveNonexistentEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyListGraphTest.AddDuplicateVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyListGraphTest.AddDuplicateVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyListGraphTest.AddDuplicateVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyListGraphTest.AddDuplicateEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyListGraphTest.AddDuplicateEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyListGraphTest.AddDuplicateEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyListGraphTest.GetNeighborsOfNonexistentVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyListGraphTest.GetNeighborsOfNonexistentVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyListGraphTest.GetNeighborsOfNonexistentVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyListGraphTest.LargeGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyListGraphTest.LargeGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyListGraphTest.LargeGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyMatrixGraphTest.AddVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyMatrixGraphTest.AddVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyMatrixGraphTest.AddVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyMatrixGraphTest.RemoveVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyMatrixGraphTest.RemoveVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyMatrixGraphTest.RemoveVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyMatrixGraphTest.AddEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyMatrixGraphTest.AddEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyMatrixGraphTest.AddEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyMatrixGraphTest.RemoveEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyMatrixGraphTest.RemoveEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyMatrixGraphTest.RemoveEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyMatrixGraphTest.HasVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyMatrixGraphTest.HasVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyMatrixGraphTest.HasVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyMatrixGraphTest.HasEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyMatrixGraphTest.HasEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyMatrixGraphTest.HasEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyMatrixGraphTest.RemoveNonexistentVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyMatrixGraphTest.RemoveNonexistentVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyMatrixGraphTest.RemoveNonexistentVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyMatrixGraphTest.RemoveNonexistentEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyMatrixGraphTest.RemoveNonexistentEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyMatrixGraphTest.RemoveNonexistentEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyMatrixGraphTest.AddDuplicateVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyMatrixGraphTest.AddDuplicateVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyMatrixGraphTest.AddDuplicateVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyMatrixGraphTest.AddDuplicateEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyMatrixGraphTest.AddDuplicateEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyMatrixGraphTest.AddDuplicateEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AdjacencyMatrixGraphTest.LargeGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=AdjacencyMatrixGraphTest.LargeGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AdjacencyMatrixGraphTest.LargeGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.SimpleGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.SimpleGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.SimpleGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.DisconnectedGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.DisconnectedGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.DisconnectedGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.NegativeWeights]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.NegativeWeights]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.NegativeWeights]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.SingleVertexGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.SingleVertexGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.SingleVertexGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.NegativeCycle]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.NegativeCycle]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.NegativeCycle]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.LargeGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.LargeGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.LargeGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.MultiplePaths]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.MultiplePaths]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.MultiplePaths]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.ZeroWeightEdges]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.ZeroWeightEdges]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.ZeroWeightEdges]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.MixedWeights]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.MixedWeights]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.MixedWeights]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.NoEdges]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.NoEdges]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.NoEdges]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.SelfLoops]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.SelfLoops]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.SelfLoops]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.MultipleNegativeEdges]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.MultipleNegativeEdges]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.MultipleNegativeEdges]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.ComplexGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.ComplexGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.ComplexGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BellmanFordTest.LargeNegativeCycle]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BellmanFordTest.LargeNegativeCycle]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BellmanFordTest.LargeNegativeCycle]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BFS_TEST.AdjacencyListThroughOne]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BFS_TEST.AdjacencyListThroughOne]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BFS_TEST.AdjacencyListThroughOne]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BFS_TEST.AdjacencyListEasy]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BFS_TEST.AdjacencyListEasy]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BFS_TEST.AdjacencyListEasy]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BFS_TEST.AdjacencyMatrixThroughOne]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BFS_TEST.AdjacencyMatrixThroughOne]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BFS_TEST.AdjacencyMatrixThroughOne]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BFS_TEST.AdjacencyMatrixEasy]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BFS_TEST.AdjacencyMatrixEasy]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BFS_TEST.AdjacencyMatrixEasy]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BFS_TEST.DirectedGraphThroughOne]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BFS_TEST.DirectedGraphThroughOne]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BFS_TEST.DirectedGraphThroughOne]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BFS_TEST.DirectedGraphEasy]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BFS_TEST.DirectedGraphEasy]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BFS_TEST.DirectedGraphEasy]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BFS_TEST.EdgeListThroughOne]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BFS_TEST.EdgeListThroughOne]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BFS_TEST.EdgeListThroughOne]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BFS_TEST.EdgeListEasy]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BFS_TEST.EdgeListEasy]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BFS_TEST.EdgeListEasy]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BFS_TEST.UndirectedGraphThroughOne]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BFS_TEST.UndirectedGraphThroughOne]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BFS_TEST.UndirectedGraphThroughOne]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BFS_TEST.UndirectedGraphEasy]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BFS_TEST.UndirectedGraphEasy]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BFS_TEST.UndirectedGraphEasy]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BAP_TEST.AdjacencyListContains]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BAP_TEST.AdjacencyListContains]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BAP_TEST.AdjacencyListContains]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BAP_TEST.AdjacencyListCycle]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BAP_TEST.AdjacencyListCycle]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BAP_TEST.AdjacencyListCycle]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BAP_TEST.AdjacencyMatrixContains]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BAP_TEST.AdjacencyMatrixContains]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BAP_TEST.AdjacencyMatrixContains]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BAP_TEST.AdjacencyMatrixCycle]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BAP_TEST.AdjacencyMatrixCycle]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BAP_TEST.AdjacencyMatrixCycle]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BAP_TEST.DirectedGraphContains]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BAP_TEST.DirectedGraphContains]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BAP_TEST.DirectedGraphContains]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BAP_TEST.DirectedGraphCycle]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BAP_TEST.DirectedGraphCycle]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BAP_TEST.DirectedGraphCycle]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BAP_TEST.EdgeListContains]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BAP_TEST.EdgeListContains]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BAP_TEST.EdgeListContains]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BAP_TEST.EdgeListCycle]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BAP_TEST.EdgeListCycle]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BAP_TEST.EdgeListCycle]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BAP_TEST.UndirectedContains]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BAP_TEST.UndirectedContains]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BAP_TEST.UndirectedContains]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BAP_TEST.UndirectedCycle]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=BAP_TEST.UndirectedCycle]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BAP_TEST.UndirectedCycle]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DFS_TEST.AdjacencyListNoVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DFS_TEST.AdjacencyListNoVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DFS_TEST.AdjacencyListNoVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DFS_TEST.AdjacencyListNoMultipleVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DFS_TEST.AdjacencyListNoMultipleVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DFS_TEST.AdjacencyListNoMultipleVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DFS_TEST.AdjacencyMatrixNoVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DFS_TEST.AdjacencyMatrixNoVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DFS_TEST.AdjacencyMatrixNoVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DFS_TEST.AdjacencyMatrixNoMultipleVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DFS_TEST.AdjacencyMatrixNoMultipleVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DFS_TEST.AdjacencyMatrixNoMultipleVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DFS_TEST.DirectedNoVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DFS_TEST.DirectedNoVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DFS_TEST.DirectedNoVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DFS_TEST.DirectedNoMultipleVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DFS_TEST.DirectedNoMultipleVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DFS_TEST.DirectedNoMultipleVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DFS_TEST.EdgeListNoVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DFS_TEST.EdgeListNoVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DFS_TEST.EdgeListNoVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DFS_TEST.EdgeListNoMultipleVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DFS_TEST.EdgeListNoMultipleVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DFS_TEST.EdgeListNoMultipleVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DFS_TEST.UndirectedNoVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DFS_TEST.UndirectedNoVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DFS_TEST.UndirectedNoVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DFS_TEST.UndirectedNoMultipleVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DFS_TEST.UndirectedNoMultipleVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DFS_TEST.UndirectedNoMultipleVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DirectedGraphTest.AddVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DirectedGraphTest.AddVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DirectedGraphTest.AddVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DirectedGraphTest.RemoveVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DirectedGraphTest.RemoveVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DirectedGraphTest.RemoveVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DirectedGraphTest.AddEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DirectedGraphTest.AddEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DirectedGraphTest.AddEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DirectedGraphTest.RemoveEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DirectedGraphTest.RemoveEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DirectedGraphTest.RemoveEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DirectedGraphTest.HasVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DirectedGraphTest.HasVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DirectedGraphTest.HasVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DirectedGraphTest.HasEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DirectedGraphTest.HasEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DirectedGraphTest.HasEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DirectedGraphTest.RemoveNonexistentVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DirectedGraphTest.RemoveNonexistentVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DirectedGraphTest.RemoveNonexistentVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DirectedGraphTest.RemoveNonexistentEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DirectedGraphTest.RemoveNonexistentEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DirectedGraphTest.RemoveNonexistentEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DirectedGraphTest.AddDuplicateVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DirectedGraphTest.AddDuplicateVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DirectedGraphTest.AddDuplicateVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DirectedGraphTest.AddDuplicateEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DirectedGraphTest.AddDuplicateEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DirectedGraphTest.AddDuplicateEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DirectedGraphTest.GetNeighborsOfNonexistentVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DirectedGraphTest.GetNeighborsOfNonexistentVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DirectedGraphTest.GetNeighborsOfNonexistentVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[DirectedGraphTest.LargeGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=DirectedGraphTest.LargeGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[DirectedGraphTest.LargeGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[EdgeListGraphTest.AddVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=EdgeListGraphTest.AddVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[EdgeListGraphTest.AddVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[EdgeListGraphTest.RemoveVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=EdgeListGraphTest.RemoveVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[EdgeListGraphTest.RemoveVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[EdgeListGraphTest.AddEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=EdgeListGraphTest.AddEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[EdgeListGraphTest.AddEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[EdgeListGraphTest.RemoveEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=EdgeListGraphTest.RemoveEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[EdgeListGraphTest.RemoveEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[EdgeListGraphTest.HasVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=EdgeListGraphTest.HasVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[EdgeListGraphTest.HasVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[EdgeListGraphTest.HasEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=EdgeListGraphTest.HasEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[EdgeListGraphTest.HasEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[EdgeListGraphTest.RemoveNonexistentVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=EdgeListGraphTest.RemoveNonexistentVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[EdgeListGraphTest.RemoveNonexistentVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[EdgeListGraphTest.RemoveNonexistentEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=EdgeListGraphTest.RemoveNonexistentEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[EdgeListGraphTest.RemoveNonexistentEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[EdgeListGraphTest.AddDuplicateVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=EdgeListGraphTest.AddDuplicateVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[EdgeListGraphTest.AddDuplicateVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[EdgeListGraphTest.AddDuplicateEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=EdgeListGraphTest.AddDuplicateEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[EdgeListGraphTest.AddDuplicateEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[EdgeListGraphTest.GetNeighborsOfNonexistentVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=EdgeListGraphTest.GetNeighborsOfNonexistentVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[EdgeListGraphTest.GetNeighborsOfNonexistentVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[EdgeListGraphTest.LargeGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=EdgeListGraphTest.LargeGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[EdgeListGraphTest.LargeGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FloydWarshallTest.SingleNodeGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=FloydWarshallTest.SingleNodeGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FloydWarshallTest.SingleNodeGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FloydWarshallTest.ZeroWeightEdges]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=FloydWarshallTest.ZeroWeightEdges]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FloydWarshallTest.ZeroWeightEdges]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FloydWarshallTest.LargeGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=FloydWarshallTest.LargeGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FloydWarshallTest.LargeGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FloydWarshallTest.NegativeWeightsNoCycle]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=FloydWarshallTest.NegativeWeightsNoCycle]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FloydWarshallTest.NegativeWeightsNoCycle]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FloydWarshallTest.AllPairsDisconnected]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=FloydWarshallTest.AllPairsDisconnected]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FloydWarshallTest.AllPairsDisconnected]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FloydWarshallTest.MixedWeights]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=FloydWarshallTest.MixedWeights]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FloydWarshallTest.MixedWeights]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FloydWarshallTest.LargeNegativeWeights]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=FloydWarshallTest.LargeNegativeWeights]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FloydWarshallTest.LargeNegativeWeights]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FloydWarshallTest.MultiplePaths]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=FloydWarshallTest.MultiplePaths]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FloydWarshallTest.MultiplePaths]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FloydWarshallTest.NoEdges]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=FloydWarshallTest.NoEdges]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FloydWarshallTest.NoEdges]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FloydWarshallTest.LargeGraphWithNegativeWeights]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=FloydWarshallTest.LargeGraphWithNegativeWeights]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FloydWarshallTest.LargeGraphWithNegativeWeights]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FloydWarshallTest.ComplexGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=FloydWarshallTest.ComplexGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FloydWarshallTest.ComplexGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UndirectedGraphTest.AddVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=UndirectedGraphTest.AddVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UndirectedGraphTest.AddVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UndirectedGraphTest.RemoveVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=UndirectedGraphTest.RemoveVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UndirectedGraphTest.RemoveVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UndirectedGraphTest.AddEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=UndirectedGraphTest.AddEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UndirectedGraphTest.AddEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UndirectedGraphTest.RemoveEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=UndirectedGraphTest.RemoveEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UndirectedGraphTest.RemoveEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UndirectedGraphTest.HasVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=UndirectedGraphTest.HasVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UndirectedGraphTest.HasVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UndirectedGraphTest.HasEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=UndirectedGraphTest.HasEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UndirectedGraphTest.HasEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UndirectedGraphTest.RemoveNonexistentVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=UndirectedGraphTest.RemoveNonexistentVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UndirectedGraphTest.RemoveNonexistentVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UndirectedGraphTest.RemoveNonexistentEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=UndirectedGraphTest.RemoveNonexistentEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UndirectedGraphTest.RemoveNonexistentEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UndirectedGraphTest.AddDuplicateVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=UndirectedGraphTest.AddDuplicateVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UndirectedGraphTest.AddDuplicateVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UndirectedGraphTest.AddDuplicateEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=UndirectedGraphTest.AddDuplicateEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UndirectedGraphTest.AddDuplicateEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UndirectedGraphTest.GetNeighborsOfNonexistentVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=UndirectedGraphTest.GetNeighborsOfNonexistentVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UndirectedGraphTest.GetNeighborsOfNonexistentVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UndirectedGraphTest.LargeGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=UndirectedGraphTest.LargeGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UndirectedGraphTest.LargeGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WeightedGraphTest.AddVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=WeightedGraphTest.AddVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WeightedGraphTest.AddVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WeightedGraphTest.RemoveVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=WeightedGraphTest.RemoveVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WeightedGraphTest.RemoveVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WeightedGraphTest.AddEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=WeightedGraphTest.AddEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WeightedGraphTest.AddEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WeightedGraphTest.RemoveEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=WeightedGraphTest.RemoveEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WeightedGraphTest.RemoveEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WeightedGraphTest.HasVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=WeightedGraphTest.HasVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WeightedGraphTest.HasVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WeightedGraphTest.HasEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=WeightedGraphTest.HasEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WeightedGraphTest.HasEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WeightedGraphTest.RemoveNonexistentVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=WeightedGraphTest.RemoveNonexistentVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WeightedGraphTest.RemoveNonexistentVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WeightedGraphTest.RemoveNonexistentEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=WeightedGraphTest.RemoveNonexistentEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WeightedGraphTest.RemoveNonexistentEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WeightedGraphTest.AddDuplicateVertex]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=WeightedGraphTest.AddDuplicateVertex]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WeightedGraphTest.AddDuplicateVertex]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WeightedGraphTest.AddDuplicateEdge]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=WeightedGraphTest.AddDuplicateEdge]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WeightedGraphTest.AddDuplicateEdge]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WeightedGraphTest.LargeGraph]=]  /home/anxx/prog/project_of_algoritms/Graph_library/build/tests/GraphTests [==[--gtest_filter=WeightedGraphTest.LargeGraph]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WeightedGraphTest.LargeGraph]=]  PROPERTIES WORKING_DIRECTORY /home/anxx/prog/project_of_algoritms/Graph_library/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  GraphTests_TESTS AdjacencyListGraphTest.AddVertex AdjacencyListGraphTest.RemoveVertex AdjacencyListGraphTest.AddEdge AdjacencyListGraphTest.RemoveEdge AdjacencyListGraphTest.GetNeighborsIterator AdjacencyListGraphTest.HasVertex AdjacencyListGraphTest.HasEdge AdjacencyListGraphTest.RemoveNonexistentVertex AdjacencyListGraphTest.RemoveNonexistentEdge AdjacencyListGraphTest.AddDuplicateVertex AdjacencyListGraphTest.AddDuplicateEdge AdjacencyListGraphTest.GetNeighborsOfNonexistentVertex AdjacencyListGraphTest.LargeGraph AdjacencyMatrixGraphTest.AddVertex AdjacencyMatrixGraphTest.RemoveVertex AdjacencyMatrixGraphTest.AddEdge AdjacencyMatrixGraphTest.RemoveEdge AdjacencyMatrixGraphTest.HasVertex AdjacencyMatrixGraphTest.HasEdge AdjacencyMatrixGraphTest.RemoveNonexistentVertex AdjacencyMatrixGraphTest.RemoveNonexistentEdge AdjacencyMatrixGraphTest.AddDuplicateVertex AdjacencyMatrixGraphTest.AddDuplicateEdge AdjacencyMatrixGraphTest.LargeGraph BellmanFordTest.SimpleGraph BellmanFordTest.DisconnectedGraph BellmanFordTest.NegativeWeights BellmanFordTest.SingleVertexGraph BellmanFordTest.NegativeCycle BellmanFordTest.LargeGraph BellmanFordTest.MultiplePaths BellmanFordTest.ZeroWeightEdges BellmanFordTest.MixedWeights BellmanFordTest.NoEdges BellmanFordTest.SelfLoops BellmanFordTest.MultipleNegativeEdges BellmanFordTest.ComplexGraph BellmanFordTest.LargeNegativeCycle BFS_TEST.AdjacencyListThroughOne BFS_TEST.AdjacencyListEasy BFS_TEST.AdjacencyMatrixThroughOne BFS_TEST.AdjacencyMatrixEasy BFS_TEST.DirectedGraphThroughOne BFS_TEST.DirectedGraphEasy BFS_TEST.EdgeListThroughOne BFS_TEST.EdgeListEasy BFS_TEST.UndirectedGraphThroughOne BFS_TEST.UndirectedGraphEasy BAP_TEST.AdjacencyListContains BAP_TEST.AdjacencyListCycle BAP_TEST.AdjacencyMatrixContains BAP_TEST.AdjacencyMatrixCycle BAP_TEST.DirectedGraphContains BAP_TEST.DirectedGraphCycle BAP_TEST.EdgeListContains BAP_TEST.EdgeListCycle BAP_TEST.UndirectedContains BAP_TEST.UndirectedCycle DFS_TEST.AdjacencyListNoVertex DFS_TEST.AdjacencyListNoMultipleVertex DFS_TEST.AdjacencyMatrixNoVertex DFS_TEST.AdjacencyMatrixNoMultipleVertex DFS_TEST.DirectedNoVertex DFS_TEST.DirectedNoMultipleVertex DFS_TEST.EdgeListNoVertex DFS_TEST.EdgeListNoMultipleVertex DFS_TEST.UndirectedNoVertex DFS_TEST.UndirectedNoMultipleVertex DirectedGraphTest.AddVertex DirectedGraphTest.RemoveVertex DirectedGraphTest.AddEdge DirectedGraphTest.RemoveEdge DirectedGraphTest.HasVertex DirectedGraphTest.HasEdge DirectedGraphTest.RemoveNonexistentVertex DirectedGraphTest.RemoveNonexistentEdge DirectedGraphTest.AddDuplicateVertex DirectedGraphTest.AddDuplicateEdge DirectedGraphTest.GetNeighborsOfNonexistentVertex DirectedGraphTest.LargeGraph EdgeListGraphTest.AddVertex EdgeListGraphTest.RemoveVertex EdgeListGraphTest.AddEdge EdgeListGraphTest.RemoveEdge EdgeListGraphTest.HasVertex EdgeListGraphTest.HasEdge EdgeListGraphTest.RemoveNonexistentVertex EdgeListGraphTest.RemoveNonexistentEdge EdgeListGraphTest.AddDuplicateVertex EdgeListGraphTest.AddDuplicateEdge EdgeListGraphTest.GetNeighborsOfNonexistentVertex EdgeListGraphTest.LargeGraph FloydWarshallTest.SingleNodeGraph FloydWarshallTest.ZeroWeightEdges FloydWarshallTest.LargeGraph FloydWarshallTest.NegativeWeightsNoCycle FloydWarshallTest.AllPairsDisconnected FloydWarshallTest.MixedWeights FloydWarshallTest.LargeNegativeWeights FloydWarshallTest.MultiplePaths FloydWarshallTest.NoEdges FloydWarshallTest.LargeGraphWithNegativeWeights FloydWarshallTest.ComplexGraph UndirectedGraphTest.AddVertex UndirectedGraphTest.RemoveVertex UndirectedGraphTest.AddEdge UndirectedGraphTest.RemoveEdge UndirectedGraphTest.HasVertex UndirectedGraphTest.HasEdge UndirectedGraphTest.RemoveNonexistentVertex UndirectedGraphTest.RemoveNonexistentEdge UndirectedGraphTest.AddDuplicateVertex UndirectedGraphTest.AddDuplicateEdge UndirectedGraphTest.GetNeighborsOfNonexistentVertex UndirectedGraphTest.LargeGraph WeightedGraphTest.AddVertex WeightedGraphTest.RemoveVertex WeightedGraphTest.AddEdge WeightedGraphTest.RemoveEdge WeightedGraphTest.HasVertex WeightedGraphTest.HasEdge WeightedGraphTest.RemoveNonexistentVertex WeightedGraphTest.RemoveNonexistentEdge WeightedGraphTest.AddDuplicateVertex WeightedGraphTest.AddDuplicateEdge WeightedGraphTest.LargeGraph)
